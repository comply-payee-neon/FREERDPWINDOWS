name: RDP_TIPSUNIX with State Persistence

on:
  workflow_dispatch:

# Grant write permissions to workflow
permissions:
  contents: write

jobs:
  secure-rdp:
    runs-on: windows-latest
    timeout-minutes: 3600

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          persist-credentials: true
          fetch-depth: 0
    
      # === PREPARE ===
      - name: Prepare Tailscale directory
        shell: pwsh
        run: |
          New-Item -ItemType Directory -Path "C:\ProgramData\Tailscale" -Force | Out-Null
          Write-Host "Tailscale directory prepared"
    
      # === RESTORE STATE ===
      - name: Restore Tailscale state from repository
        shell: pwsh
        run: |
          Write-Host "Current directory: $(Get-Location)"
          if (Test-Path ".github\state\server-state.conf") {
              Copy-Item ".github\state\server-state.conf" -Destination "C:\ProgramData\Tailscale\server-state.conf" -Force
              Write-Host "‚úÖ Tailscale state restored from repository"
          } else {
              Write-Host "‚ö†Ô∏è No previous state found (this is normal for first run)"
          }
    
      # === RUN YOUR MAIN LOGIC HERE ===
      # (Contoh: jalankan Tailscale, RDP, dsb.)
      - name: Run your main logic
        shell: pwsh
        run: |
          Write-Host "Simulating RDP / Tailscale session..."
          Start-Sleep -Seconds 10
    
      # === SAVE STATE BACK TO REPOSITORY ===
      - name: Sync and commit updated Tailscale state
        shell: pwsh
        run: |
          Write-Host "üîÅ Syncing repository before commit..."
          git config --global user.name "github-actions"
          git config --global user.email "actions@github.com"
          git fetch origin main
          git checkout main
          git pull --rebase origin main
    
          # Backup old state and copy new one
          if (Test-Path "C:\ProgramData\Tailscale\server-state.conf") {
              Copy-Item "C:\ProgramData\Tailscale\server-state.conf" ".github\state\server-state.conf" -Force
              Write-Host "üóÇÔ∏è Copied new Tailscale state file"
          } else {
              Write-Host "‚ö†Ô∏è No state file found to save"
          }
    
          # Commit and push safely
          git add .github/state/server-state.conf
          git commit -m "Save Tailscale state [skip ci]" || echo "No changes to commit"
          git push origin main || (Write-Host "Push failed, retrying with rebase..." && git pull --rebase origin main && git push origin main)
          Write-Host "‚úÖ State committed to repository successfully"
